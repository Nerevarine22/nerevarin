// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ComplexSmartContract {
    // Змінні для зберігання даних
    uint256 public totalSupply;
    mapping(address => uint256) public balances;
    address public owner;

    // Події
    event Transfer(address indexed from, address indexed to, uint256 value);

    // Конструктор контракту
    constructor(uint256 initialSupply) {
        totalSupply = initialSupply;
        balances[msg.sender] = initialSupply;
        owner = msg.sender;
    }

    // Функція для переказу токенів
    function transfer(address to, uint256 value) public returns (bool) {
        require(balances[msg.sender] >= value, "Insufficient balance");
        balances[msg.sender] -= value;
        balances[to] += value;
        emit Transfer(msg.sender, to, value);
        return true;
    }

    // Функція для зміни власника контракту
    function changeOwner(address newOwner) public {
        require(msg.sender == owner, "Only owner can change ownership");
        owner = newOwner;
    }
}
